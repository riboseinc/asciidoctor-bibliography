q
array.first.keys - allowed_keys
array.first.keys - allowed_kayes
array.first.keys.exclude
array.first.keys.excued
array.first.keys
array
q
sort.children.first.attributes
sort.children
sort
sort.add_children(*new_sort_keys)
sort
n
hash
q
YAML.safe_load ""
YAML.safe_load ''
value
vaue
q
psych_error.to_s
psych_error.inspect
psych_error
n
continue
psych_error.message
psych_error
n
continue
self['bibliography-sort']
YAML.safe_load self['bibliography-sort'].to_s
value
n
q
c
q
CSL::Style.load('')
continue
File.extname File.expand_path('sample-default.adoc')
File.expand_path('sample-default.adoc')
File.read '~/.dropbox'
File.exist? File.expand_path('~/.dropbox')
File.expand_path('~/.dropbox')
File.expand_path('~')
File.absolute_path('~')
File.absolute_path('~/.dropbox')
File.absolute_path('~.dropbox')
File.absolute_path('~/.dropbox')
File.absolute_path '~/.dropbox'
File.file? '~/.dropbox'
File.file? '~/.gitconfig'
File.file? 'sample-default.adoc'
File.exist? 'sample-default.adoc'
File.exist? 'what'
CSL::Style.load 'apaasd'
q
%w{asd lol}
document.bibliographer.options.hyperlinks?
continue
raise AsciidoctorBibliography::Errors::DatabaseFormatNotSupported.new
AsciidoctorBibliography::Errors::DatabaseFormatNotSupported.new
AsciidoctorBibliography::Errors::DatabaseFormatNotSupported
AsciidoctorBibliography::Errors
continue
document.bibliographer.options.hyperlinks?
document.bibliographer.options
continue
CSL::Style.list
CSL::Style.all
CSL.Style.all
CSL.Style.list
CSL.Style.ls
CSL::Style.load 'hwat'
CSL::Style.load '../../../iso_690_csl/styles/iso690-full-note-sk.csl'
CSL::Style.load '../../..'
CSL::Style.load 'apaasd'
CSL::Style.load 'apa'
CSL::Style.load
op
op.raw
op = ::AsciidoctorBibliography::Options.new_from_reader(reader)
q
op.raw
op = ::AsciidoctorBibliography::Options.new_from_reader(reader)
::AsciidoctorBibliography::Options.new_from_reader reader
